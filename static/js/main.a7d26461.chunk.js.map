{"version":3,"sources":["Components/BootstrapNav.js","Components/LandingPage.js","Components/SearchedRecipeForm.js","Components/Recipes.js","Components/WhyVegan.js","Components/VeganNews.js","Components/GetInTouch.js","Components/FindRestaurants.js","App.js","index.js"],"names":["BootstrapNav","Navbar","sticky","bg","expand","Container","fluid","Brand","to","className","Toggle","aria-controls","Offcanvas","id","aria-labelledby","placement","Header","closeButton","Title","Body","Nav","LandingRecipe","useState","title","img","url","randomRecipe","setRandomRecipe","useEffect","fetch","then","response","json","data","console","log","recipes","image","sourceUrl","Card","Img","variant","src","href","target","Text","SearchedRecipeForm","props","noResults","setNoResults","makeApiCall","input","results","totalResults","setSearchedRecipes","searchedToDisplay","searchedRecipes","map","recipe","style","width","ref","inputSearch","type","placeholder","onClick","event","preventDefault","current","value","Recipes","loadingRecipes","setLoadingRecipes","recipesToDisplay","WhyVegan","VeganNews","vegArticles","setVegArticles","method","headers","articles","article","urlToImage","GoogleSpreadsheet","require","creds","doc","GetInTouch","name","setName","email","setEmail","message","setMessage","makeInitialCall","a","useServiceAccountAuth","loadInfo","sheetsByIndex","getRows","dataRows","handleSubmit","newRow","Name","Email","Message","addRow","onChange","e","FindRestaurants","searchedResults","setSearchedResults","locationSearch","useRef","restaurantList","restaurant","image_url","location","address1","is_closed","axios","get","Authorization","params","categories","res","businesses","catch","err","App","exact","path","LandingPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7d26461.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../bootstrapnav.css'\nimport { Navbar, Container, Offcanvas, Collapse, Nav } from \"react-bootstrap\";\n\nconst BootstrapNav = () => {\n    // const [isActive, setActive] = useState(\"false\");\n    // const collapseNav = () => {\n\n    // }\n\n  return (\n    <>\n      <Navbar sticky=\"top\" bg=\"light\" expand={false}>\n        <Container fluid>\n          <Navbar.Brand>\n            <Link to=\"/\">\n              <span className=\"easy\">easy</span>\n              <span className=\"vegan\">vegan</span>\n            </Link>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"offcanvasNavbar\" />\n          <Navbar.Offcanvas\n            id=\"offcanvasNavbar\"\n            aria-labelledby=\"offcanvasNavbarLabel\"\n            placement=\"end\"\n          >\n            <Offcanvas.Header closeButton>\n              <Offcanvas.Title id=\"offcanvasNavbarLabel\">\n                <Link to=\"/\">\n                  <span className=\"easy\">easy</span>\n                  <span className=\"vegan\">vegan</span>\n                </Link>\n              </Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n              <Nav className=\"justify-content-end flex-grow-1 pe-3\">\n                <Link className=\"nav-links\" to=\"/recipes\">\n                  Recipes\n                </Link>\n                <Link className=\"nav-links\" to=\"/whyvegan\">\n                  Why go Vegan\n                </Link>\n                <Link className=\"nav-links\" to=\"/vegannews\">\n                  Vegan News\n                </Link>\n                <Link className=\"nav-links\" to=\"/findrestaurants\">\n                  Find a Vegan Eatery\n                </Link>\n                <Link className=\"nav-links\" to=\"/getintouch\">\n                  Get in Touch\n                </Link>\n              </Nav>\n            </Offcanvas.Body>\n          </Navbar.Offcanvas>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default BootstrapNav;\n","import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\nimport '../landingPage.css'\nimport '../responsive.css'\n\nconst LandingRecipe = () => {\n    const [randomRecipe, setRandomRecipe] = useState({title: '', img: '', url: ''});\n\n    const makeApiCall = () => {\n      fetch(\n        \"https://api.spoonacular.com/recipes/random?apiKey=410dd14f677a417eb5dda6c8be2a9f57&number=1&tags=vegan\"\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data)\n          setRandomRecipe({title: data.recipes[0].title, img: data.recipes[0].image, url: data.recipes[0].sourceUrl })\n        });\n    };\n\n    useEffect(() => {\n      makeApiCall();\n    }, []);\n\n    return (\n      <>\n        <div id=\"welcome\">\n          <div className=\"landingContent\">\n            <div className=\"titleAndRec\">\n              <div className=\"titleCont\">\n                <h1 className=\"sitename\">\n                  <span className=\"easy\">easy</span>\n                  <span className=\"vegan\">vegan</span>\n                </h1>\n                <div className=\"welcome-text\">\n                  <p>\n                    Your place for a smooth transition into the world of\n                    veganism.\n                  </p>\n                </div>\n              </div>\n\n              <Card className=\"hiddenMobile\">\n                <p className=\"cardP\">Recipe of the Day:</p>\n                <Card.Img variant=\"bottom\" src={randomRecipe.img} />\n                <Card.Body>\n                  <Card.Title>\n                    <a className='hoverlinks' href={randomRecipe.url} target=\"_blank\">\n                      <h6>{randomRecipe.title}</h6>\n                    </a>\n                  </Card.Title>\n                </Card.Body>\n              </Card>\n            </div>\n\n            <div className=\"landingNav\">\n              <Link className=\"nav-links\" to=\"/recipes\">\n                <Card className=\"navCards\">\n                  <Card.Img\n                    variant=\"top\"\n                    src=\"https://res.cloudinary.com/adelaney923/image/upload/v1635976926/easy-vegan-recipes-img_xo8e5g.jpg\"\n                  />\n                  <Card.Body>\n                    <Card.Text>Recipes</Card.Text>\n                  </Card.Body>\n                </Card>\n              </Link>\n              <Link className=\"nav-links\" to=\"/vegannews\">\n                <Card className=\"navCards\">\n                  <Card.Img\n                    variant=\"top\"\n                    src=\"https://res.cloudinary.com/adelaney923/image/upload/v1635976924/vegan-news-img_kxkc4g.jpg\"\n                  />\n                  <Card.Body>\n                    <Card.Text>Vegan News</Card.Text>\n                  </Card.Body>\n                </Card>\n              </Link>\n              <Link className=\"nav-links\" to=\"/findrestaurants\">\n                <Card className=\"navCards\">\n                  <Card.Img\n                    variant=\"top\"\n                    src=\"https://res.cloudinary.com/adelaney923/image/upload/v1635976921/vegann-rest-img_ivp1qi.jpg\"\n                  />\n                  <Card.Body>\n                    <Card.Text>Find a Restaurant</Card.Text>\n                  </Card.Body>\n                </Card>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n}\n\nexport default LandingRecipe","import React, {useEffect, useState, useRef} from 'react'\nimport { Card } from 'react-bootstrap'\nimport '../App.css'\n\n\nconst SearchedRecipeForm = (props) => {\n\n    // const [searchedRecipes, setSearchedRecipes] = useState([])\n    const [noResults, setNoResults] = useState('')\n    \n    const handleSearch = (event) => {\n        event.preventDefault();\n        makeApiCall(props.inputSearch.current.value);\n        props.inputSearch.current.value='';\n        setNoResults('')\n    };\n\n    const makeApiCall = (input) => {\n        fetch(\n          `https://api.spoonacular.com/recipes/complexSearch?apiKey=410dd14f677a417eb5dda6c8be2a9f57&query=${input}&diet=vegan&sort=random&number=100`\n        )\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data.results)\n          {data.totalResults === 0 ? setNoResults(\"Sorry we couldn't find that. Try searching for something else or browse through the recipes below!\") : props.setSearchedRecipes(data.results)}\n        })\n    }\n\n\n\n\n    const searchedToDisplay =\n      props.searchedRecipes &&\n      props.searchedRecipes.map((recipe) => {\n        return (\n          <>\n            <Card className=\"rescards\" style={{ width: \"18rem\" }}>\n              <Card.Img className=\"resimg\" variant=\"top\" src={recipe.image} />\n              <Card.Body>\n                <Card.Title>\n                  <a\n                    className=\"reslinks\"\n                    href={recipe.sourceUrl}\n                    target=\"_blank\"\n                  >\n                    <p>{recipe.title}</p>\n                  </a>\n                </Card.Title>\n              </Card.Body>\n            </Card>\n          </>\n        );\n      });\n\n    return (\n      <div>\n        <form className=\"recipeSearch\">\n          <input\n            ref={props.inputSearch}\n            type=\"text\"\n            placeholder=\"I'm craving...\"\n          ></input>\n          <button className=\"recipebtn\" onClick={handleSearch}>\n            Let's Eat\n          </button>\n        </form>\n        <p className=\"noresultsmessage\">{noResults}</p>\n        <div className=\"searchedRecipes\">{searchedToDisplay}</div>\n      </div>\n    );\n}\n\nexport default SearchedRecipeForm","import React, {useState, useEffect, useRef} from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport SearchedRecipeForm from \"./SearchedRecipeForm\"\nimport '../recipes.css'\nimport '../App.css'\n\nconst Recipes = (props) => {\n  const [loadingRecipes, setLoadingRecipes] = useState([]);\n  const [searchedRecipes, setSearchedRecipes] = useState()\n  console.log(searchedRecipes)\n\n  const makeApiCall = () => {\n    fetch(\n      \"https://api.spoonacular.com/recipes/random?apiKey=410dd14f677a417eb5dda6c8be2a9f57&number=20&tags=vegan\"\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setLoadingRecipes(data.recipes);\n      });\n  };\n\n  useEffect(() => {\n    makeApiCall();\n  }, []);\n\n  const recipesToDisplay = !searchedRecipes && loadingRecipes &&\n    loadingRecipes.map((recipe) => {\n      return (\n        <>\n          <Card className=\"rescards\" style={{ width: \"18rem\" }}>\n            <Card.Img className=\"resimg\" variant=\"top\" src={recipe.image} />\n            <Card.Body>\n              <Card.Title>\n                <a className='reslinks' href={recipe.sourceUrl} target=\"_blank\">\n                  <p>{recipe.title}</p>\n                </a>\n              </Card.Title>\n            </Card.Body>\n          </Card>\n        </>\n      );\n    });\n\n  return (\n    <div>\n      <h1>Recipes</h1>\n      <SearchedRecipeForm inputSearch={props.inputSearch} searchedRecipes={searchedRecipes} setSearchedRecipes={setSearchedRecipes}/>\n      <div className=\"recipesDisplay\">{recipesToDisplay}</div>\n    </div>\n  );\n};\n\nexport default Recipes;","import React from \"react\";\n\nconst WhyVegan = () => {\n  return (\n    <>\n    <div className='whyVegan'>\n      <h1>Why go Vegan</h1>\n      <h2>For the Animals</h2>\n      <p>Preventing the exploitation of animals is not the only reason for becoming vegan, but for many it remains the key factor in their decision to go vegan and stay vegan. Having emotional attachments with animals may form part of that reason, while many believe that all sentient creatures have a right to life and freedom. Specifics aside, avoiding animal products is one of the most obvious ways you can take a stand against animal cruelty and animal exploitation everywhere. Read a detailed overview on why being vegan demonstrates true compassion for animals.</p>\n      <h2>For your Health</h2>\n      <p>Well-planned vegan diets follow healthy eating guidelines, and contain all the nutrients that our bodies need. Both the British Dietetic Association and the American Academy of Nutrition and Dietetics recognise that they are suitable for every age and stage of life. Some research has linked vegan diets with lower blood pressure and cholesterol, and lower rates of heart disease, type 2 diabetes and some types of cancer. Going vegan is a great opportunity to learn more about nutrition and cooking, and improve your diet. Getting your nutrients from plant foods allows more room in your diet for health-promoting options like whole grains, fruit, nuts, seeds and vegetables, which are packed full of beneficial fibre, vitamins and minerals.</p>\n      <h2>For the Environment</h2>\n      <p>From recycling our household rubbish to cycling to work, we're all aware of ways to live a greener life. One of the most effective things an individual can do to lower their carbon footprint is to avoid all animal products. This goes way beyond the problem of cow flatulence!</p>\n      <h3>Why is meat and dairy so bad for the environment?</h3>\n      <p>The production of meat and other animal products places a heavy burden on the environment - from crops and water required to feed the animals, to the transport and other processes involved from farm to fork. The vast amount of grain feed required for meat production is a significant contributor to deforestation, habitat loss and species extinction. In Brazil alone, the equivalent of 5.6 million acres of land is used to grow soya beans for animals in Europe. This land contributes to developing world malnutrition by driving impoverished populations to grow cash crops for animal feed, rather than food for themselves. On the other hand, considerably lower quantities of crops and water are required to sustain a vegan diet, making the switch to veganism one of the easiest, most enjoyable and most effective ways to reduce our impact on the environment.</p>\n      <h2>For People</h2>\n      <p>Just like veganism is the sustainable option when it comes to looking after our planet, plant-based living is also a more sustainable way of feeding the human family. A plant-based diet requires only one third of the land needed to support a meat and dairy diet. With rising global food and water insecurity due to a myriad of environmental and socio-economic problems, there's never been a better time to adopt a more sustainable way of living. Avoiding animal products is not just one of the simplest ways an individual can reduce the strain on food as well as other resources, it's the simplest way to take a stand against inefficient food systems which disproportionately affect the poorest people all over the world</p>\n    </div>\n\n    <footer>\n    <p>Information from VeganSociety.com</p>\n    </footer>\n    </>\n  )\n};\n\nexport default WhyVegan;\n","import React, {useEffect, useState} from \"react\";\nimport {Card} from 'react-bootstrap';\nimport '../veganNews.css'\n\nconst VeganNews = () => {\n    const [vegArticles, setVegArticles] = useState([])\n    \n    const makeApiCall = () => {\n    fetch(\"https://vegan-news.p.rapidapi.com/getnews\", {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"vegan-news.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"7986ba462cmsh508be8a4909dd3cp1cc7b9jsn09febfef5121\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n      console.log(data)\n      setVegArticles(data.articles)\n      })\n    }\n\n    useEffect(() => {\n        makeApiCall()\n    }, [])\n    \n    const articles = vegArticles && vegArticles.map((article) => {\n        return (\n          <Card className=\"rescards\" style={{ width: \"18rem\" }}>\n            <Card.Img\n              className=\"resimg\"\n              variant=\"top\"\n              src={article.urlToImage}\n            />\n            <Card.Body>\n              <Card.Title>\n                <a className='reslinks' href={article.url} target=\"_blank\">\n                  <p>{article.title}</p>\n                </a>\n              </Card.Title>\n            </Card.Body>\n          </Card>\n        );\n    })\n\n\n    return (\n      <div id=\"newsArticles\">\n        <h1>Vegan News</h1>\n        <div className=\"articles\">{articles}</div>\n      </div>\n    );\n}\n\nexport default VeganNews","import React from \"react\"\nimport { useEffect, useState } from \"react\";\nimport '../App.css'\nconst { GoogleSpreadsheet } = require(\"google-spreadsheet\");\nconst creds = require('../client_secret.json');\nlet doc = {};\n\nconst GetInTouch = () => {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n    const makeInitialCall = async () => {\n      doc = new GoogleSpreadsheet(\n        \"1vyeBYBOJ4XBZwqSNDGG_rzGQAwmW4UYwPiqGEFzDG2E\"\n      );\n      await doc.useServiceAccountAuth(creds);\n      await doc.loadInfo();\n      let dataRows = await doc.sheetsByIndex[0].getRows();\n      console.log(doc.sheetsByIndex[0]);\n      console.log(dataRows);\n    };\n    useEffect(() => {\n      makeInitialCall();\n    }, []);\n\n    const handleNameChange = (e) => {\n      setName(e.target.value);\n    };\n\n    const handleEmailChange = (e) => {\n      setEmail(e.target.value);\n    };\n\n    const handleMessageChange = (e) => {\n      setMessage(e.target.value);\n    };\n\n    const handleSubmit = async () => {\n      let newRow = {\n        Name: name,\n        Email: email,\n        Message: message,\n      };\n\n      let sheet = await doc.sheetsByIndex[0];\n      sheet.addRow(newRow);\n    };\n\n    return (\n      <div className=\"contact-form\">\n        <form>\n          <h3>Let's Talk</h3>\n          <input\n            type=\"text\"\n            onChange={handleNameChange}\n            value={name}\n            placeholder=\"Name\"\n          />\n          <input\n            type=\"email\"\n            onChange={handleEmailChange}\n            value={email}\n            placeholder=\"Email\"\n          />\n          <textarea\n            type=\"text\"\n            onChange={handleMessageChange}\n            value={message}\n            placeholder=\"What's on your mind?\"\n          />\n          <button onClick={handleSubmit}>Send</button>\n        </form>\n      </div>\n    );\n}\n\nexport default GetInTouch","import React, { useEffect, useRef, useState } from 'react'\nimport { Card } from 'react-bootstrap';\nimport axios from 'axios'\nimport '../App.css'\n\nconst FindRestaurants = () => {\n  const [searchedResults, setSearchedResults] = useState([]);\n\n    const getRestaurantsFromApi = (input) => {\n      axios\n        .get(\n          `${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search?location=${input}`,\n          {\n            //required authorization format from API\n            headers: {\n              //Bearer with API key\n              Authorization:\n                \"Bearer DFCabjGEOblXuYtY4Qq7u-OgKN3M4uxS6UGYuKsensdRR6Qe5atbWa29J-jrAmt-1NDGCPfcZ7sDbOznJ94G3RTL32o3s3owG65CTK8ZERzUhUsV67OYM7uZBx18YXYx\",\n            },\n            //option params passed to API call to retrieve only vegan spots\n            params: {\n              categories: \"vegan\",\n            },\n          }\n        )\n        .then((res) => {\n          setSearchedResults(res.data.businesses);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    \n\n    const locationSearch=useRef()\n\n    const handleSearch = (event) => {\n      event.preventDefault()\n      getRestaurantsFromApi(locationSearch.current.value)\n      locationSearch.current.value=''\n    }\n\n    console.log(searchedResults)\n    const restaurantList = searchedResults && searchedResults.map((restaurant) => {\n      return (\n        <Card className='rescards' style={{ width: \"18rem\" }}>\n          <Card.Img className='resimg' variant=\"top\" src={restaurant.image_url} />\n          <Card.Body>\n            <Card.Title>\n              <a className='reslinks' href={restaurant.url} target=\"_blank\">\n                {restaurant.name}\n              </a>\n            </Card.Title>\n            <Card.Text>\n              <p>Location: {restaurant.location.address1}</p>\n              <p>They're {restaurant.is_closed ? \"closed.\" : \"open!\"}</p>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      );\n    })\n\n\n    return (\n      <div className=\"findrestaurant\">\n        <h1>Restaurant Finder</h1>\n        <p className=\"finderintro\">\n          Being vegan has become so much easier! Many restaurants, cafes and\n          bars now have vegan options. Search with your location below to see\n          what is in your area.\n        </p>\n        <form className=\"restaurant-search\">\n          <input\n            ref={locationSearch}\n            type=\"text\"\n            placeholder=\"I'm located in...\"\n          />\n          <button onClick={handleSearch}>Search</button>\n        </form>\n        <div className=\"restaurants\">{restaurantList}</div>\n      </div>\n    );\n}\n\nexport default FindRestaurants","import React, {useRef} from 'react';\nimport BootstrapNav from './Components/BootstrapNav';\nimport { Route } from 'react-router-dom';\nimport LandingPage from './Components/LandingPage';\nimport Recipes from './Components/Recipes';\nimport WhyVegan from './Components/WhyVegan';\nimport VeganNews from './Components/VeganNews';\nimport GetInTouch from './Components/GetInTouch';\nimport FindRestaurants from './Components/FindRestaurants';\n// import './App.css';\n\nfunction App() {\n  const inputSearch = useRef();\n\n\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\"> */}\n      <BootstrapNav />\n      {/* <Nav /> */}\n      {/* </header> */}\n\n      <main>\n        <Route exact path=\"/\">\n          <LandingPage />\n        </Route>\n        <Route exact path=\"/recipes\">\n          <Recipes inputSearch={inputSearch}/>\n        </Route>\n        <Route exact path=\"/whyvegan\">\n          <WhyVegan />\n        </Route>\n        <Route exact path=\"/vegannews\">\n          <VeganNews />\n        </Route>\n        <Route exact path=\"/getintouch\">\n          <GetInTouch />\n        </Route>\n        <Route exact path='/findrestaurants'>\n          <FindRestaurants />\n        </Route>\n      </main>\n\n      <footer>\n        \n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport {HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}